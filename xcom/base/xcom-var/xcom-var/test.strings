#define xcom_compare_opera(a, b, func)\
do{\
    switch (a.type) {\
        case xcom_vtype_bool:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.bool_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.bool_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.bool_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.bool_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.bool_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.bool_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.bool_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.bool_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.bool_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.bool_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.bool_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_int8:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.int8_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.int8_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.int8_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.int8_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.int8_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.int8_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.int8_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.int8_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.int8_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.int8_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.int8_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_uint8:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.uint8_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.uint8_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.uint8_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.uint8_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.uint8_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.uint8_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.uint8_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.uint8_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.uint8_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.uint8_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.uint8_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_int16:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.int16_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.int16_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.int16_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.int16_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.int16_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.int16_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.int16_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.int16_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.int16_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.int16_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.int16_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_uint16:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.uint16_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.uint16_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.uint16_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.uint16_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.uint16_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.uint16_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.uint16_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.uint16_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.uint16_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.uint16_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.uint16_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_int32:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.int32_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.int32_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.int32_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.int32_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.int32_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.int32_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.int32_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.int32_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.int32_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.int32_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.int32_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_uint32:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.uint32_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.uint32_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.uint32_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.uint32_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.uint32_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.uint32_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.uint32_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.uint32_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.uint32_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.uint32_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.uint32_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_int64:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.int64_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.int64_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.int64_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.int64_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.int64_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.int64_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.int64_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.int64_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.int64_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.int64_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.int64_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_uint64:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.uint64_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.uint64_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.uint64_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.uint64_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.uint64_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.uint64_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.uint64_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.uint64_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.uint64_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.uint64_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.uint64_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_float:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.float_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.float_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.float_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.float_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.float_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.float_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.float_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.float_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.float_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.float_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.float_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_double:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   func(a.double_val(), b.bool_val()); \
            case xcom_vtype_int8:  return   func(a.double_val(), b.int8_val()); \
            case xcom_vtype_uint8: return   func(a.double_val(), b.uint8_val()); \
            case xcom_vtype_int16: return   func(a.double_val(), b.int16_val()); \
            case xcom_vtype_uint16:return   func(a.double_val(), b.uint16_val()); \
            case xcom_vtype_int32: return   func(a.double_val(), b.int32_val()); \
            case xcom_vtype_uint32:return   func(a.double_val(), b.uint32_val()); \
            case xcom_vtype_int64: return   func(a.double_val(), b.int64_val()); \
            case xcom_vtype_uint64:return   func(a.double_val(), b.uint64_val()); \
            case xcom_vtype_float: return   func(a.double_val(), b.float_val()); \
            case xcom_vtype_double:return   func(a.double_val(), b.double_val()); \
            case xcom_vtype_string:return   false; \
            break;\
            default:\
            break;\
        }\
        case xcom_vtype_string:\
        switch (b.type) { \
            case xcom_vtype_bool:  return   false; \
            case xcom_vtype_int8:  return   false; \
            case xcom_vtype_uint8: return  false; \
            case xcom_vtype_int16: return   false; \
            case xcom_vtype_uint16:return   false; \
            case xcom_vtype_int32: return  false; \
            case xcom_vtype_uint32:return   false; \
            case xcom_vtype_int64: return   false; \
            case xcom_vtype_uint64:return   false; \
            case xcom_vtype_float: return   false; \
            case xcom_vtype_double:return  false; \
            case xcom_vtype_string:return   func(a.string_val(), b.string_val()); \
            break;\
            default:\
            break;\
        }\
        break;\
        default:\
        break;\
    }\
    return false;\
}while(0)
